// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168
#pragma warning disable CS1591 // document public APIs

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.Master.Tables.Hero
{
    public sealed class HeroFormationFrameEntityFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Master.Tables.Hero.HeroFormationFrameEntity>
    {
        // FormationId
        private static global::System.ReadOnlySpan<byte> GetSpan_FormationId() => new byte[1 + 11] { 171, 70, 111, 114, 109, 97, 116, 105, 111, 110, 73, 100 };
        // FrameIndex
        private static global::System.ReadOnlySpan<byte> GetSpan_FrameIndex() => new byte[1 + 10] { 170, 70, 114, 97, 109, 101, 73, 110, 100, 101, 120 };
        // OffsetX
        private static global::System.ReadOnlySpan<byte> GetSpan_OffsetX() => new byte[1 + 7] { 167, 79, 102, 102, 115, 101, 116, 88 };
        // OffsetY
        private static global::System.ReadOnlySpan<byte> GetSpan_OffsetY() => new byte[1 + 7] { 167, 79, 102, 102, 115, 101, 116, 89 };
        // DamageRatio
        private static global::System.ReadOnlySpan<byte> GetSpan_DamageRatio() => new byte[1 + 11] { 171, 68, 97, 109, 97, 103, 101, 82, 97, 116, 105, 111 };
        // HpCoef
        private static global::System.ReadOnlySpan<byte> GetSpan_HpCoef() => new byte[1 + 6] { 166, 72, 112, 67, 111, 101, 102 };
        // AttackCoef
        private static global::System.ReadOnlySpan<byte> GetSpan_AttackCoef() => new byte[1 + 10] { 170, 65, 116, 116, 97, 99, 107, 67, 111, 101, 102 };

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::Master.Tables.Hero.HeroFormationFrameEntity value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value is null)
            {
                writer.WriteNil();
                return;
            }

            writer.WriteMapHeader(7);
            writer.WriteRaw(GetSpan_FormationId());
            writer.Write(value.FormationId);
            writer.WriteRaw(GetSpan_FrameIndex());
            writer.Write(value.FrameIndex);
            writer.WriteRaw(GetSpan_OffsetX());
            writer.Write(value.OffsetX);
            writer.WriteRaw(GetSpan_OffsetY());
            writer.Write(value.OffsetY);
            writer.WriteRaw(GetSpan_DamageRatio());
            writer.Write(value.DamageRatio);
            writer.WriteRaw(GetSpan_HpCoef());
            writer.Write(value.HpCoef);
            writer.WriteRaw(GetSpan_AttackCoef());
            writer.Write(value.AttackCoef);
        }

        public global::Master.Tables.Hero.HeroFormationFrameEntity Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            var length = reader.ReadMapHeader();
            var __FormationId__ = default(uint);
            var __FrameIndex__ = default(int);
            var __OffsetX__ = default(int);
            var __OffsetY__ = default(int);
            var __DamageRatio__ = default(float);
            var __HpCoef__ = default(float);
            var __AttackCoef__ = default(float);

            for (int i = 0; i < length; i++)
            {
                var stringKey = global::MessagePack.Internal.CodeGenHelpers.ReadStringSpan(ref reader);
                switch (stringKey.Length)
                {
                    default:
                    FAIL:
                      reader.Skip();
                      continue;
                    case 11:
                        switch (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey))
                        {
                            default: goto FAIL;
                            case 8028075772561485638UL:
                                if (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey) != 6572398UL) { goto FAIL; }

                                __FormationId__ = reader.ReadUInt32();
                                continue;

                            case 7012779064459878724UL:
                                if (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey) != 7301492UL) { goto FAIL; }

                                __DamageRatio__ = reader.ReadSingle();
                                continue;

                        }
                    case 10:
                        switch (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey))
                        {
                            default: goto FAIL;
                            case 7236802351206593094UL:
                                if (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey) != 30821UL) { goto FAIL; }

                                __FrameIndex__ = reader.ReadInt32();
                                continue;

                            case 8017369836230571073UL:
                                if (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey) != 26213UL) { goto FAIL; }

                                __AttackCoef__ = reader.ReadSingle();
                                continue;

                        }
                    case 7:
                        switch (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey))
                        {
                            default: goto FAIL;
                            case 24897777027147343UL:
                                __OffsetX__ = reader.ReadInt32();
                                continue;
                            case 25179252003857999UL:
                                __OffsetY__ = reader.ReadInt32();
                                continue;
                        }
                    case 6:
                        if (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey) != 112585844420680UL) { goto FAIL; }

                        __HpCoef__ = reader.ReadSingle();
                        continue;

                }
            }

            var ____result = new global::Master.Tables.Hero.HeroFormationFrameEntity(__FormationId__, __FrameIndex__, __OffsetX__, __OffsetY__, __DamageRatio__, __HpCoef__, __AttackCoef__);
            reader.Depth--;
            return ____result;
        }
    }

}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name
