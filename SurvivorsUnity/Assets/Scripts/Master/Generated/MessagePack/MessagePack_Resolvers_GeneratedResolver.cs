// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168
#pragma warning disable CS1591 // document public APIs

#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Resolvers
{
    public class GeneratedResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new GeneratedResolver();

        private GeneratedResolver()
        {
        }

        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
        {
            return FormatterCache<T>.Formatter;
        }

        private static class FormatterCache<T>
        {
            internal static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

            static FormatterCache()
            {
                var f = GeneratedResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    Formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }

    internal static class GeneratedResolverGetFormatterHelper
    {
        private static readonly global::System.Collections.Generic.Dictionary<global::System.Type, int> lookup;

        static GeneratedResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(11)
            {
                { typeof(global::Master.Constants.EnemyActiveConditionType), 0 },
                { typeof(global::Master.Constants.EnemyInactiveConditionType), 1 },
                { typeof(global::Master.Constants.SkillEffectRangeType), 2 },
                { typeof(global::Master.Constants.SkillEffectType), 3 },
                { typeof(global::Master.Tables.Enemy.EnemyBase), 4 },
                { typeof(global::Master.Tables.Enemy.EnemyLevelStatus), 5 },
                { typeof(global::Master.Tables.Enemy.EnemySkill), 6 },
                { typeof(global::Master.Tables.Enemy.EnemySkillEffect), 7 },
                { typeof(global::Master.Tables.Enemy.EnemySkillSet), 8 },
                { typeof(global::Master.Tables.Hero.HeroFormation), 9 },
                { typeof(global::Master.Tables.Hero.HeroFormationFrame), 10 },
            };
        }

        internal static object GetFormatter(global::System.Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }

            switch (key)
            {
                case 0: return new MessagePack.Formatters.Master.Constants.EnemyActiveConditionTypeFormatter();
                case 1: return new MessagePack.Formatters.Master.Constants.EnemyInactiveConditionTypeFormatter();
                case 2: return new MessagePack.Formatters.Master.Constants.SkillEffectRangeTypeFormatter();
                case 3: return new MessagePack.Formatters.Master.Constants.SkillEffectTypeFormatter();
                case 4: return new MessagePack.Formatters.Master.Tables.Enemy.EnemyBaseFormatter();
                case 5: return new MessagePack.Formatters.Master.Tables.Enemy.EnemyLevelStatusFormatter();
                case 6: return new MessagePack.Formatters.Master.Tables.Enemy.EnemySkillFormatter();
                case 7: return new MessagePack.Formatters.Master.Tables.Enemy.EnemySkillEffectFormatter();
                case 8: return new MessagePack.Formatters.Master.Tables.Enemy.EnemySkillSetFormatter();
                case 9: return new MessagePack.Formatters.Master.Tables.Hero.HeroFormationFormatter();
                case 10: return new MessagePack.Formatters.Master.Tables.Hero.HeroFormationFrameFormatter();
                default: return null;
            }
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1649 // File name should match first type name
