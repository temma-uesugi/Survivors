//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/App/Scripts/Inputs/BattleInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace App.ActionInputs
{
    public partial class @BattleInputs : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @BattleInputs()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""BattleInputs"",
    ""maps"": [
        {
            ""name"": ""Battle"",
            ""id"": ""136b7c67-7e6c-4b29-911f-10db291a2eb2"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""ceb7d81c-f10c-461e-826e-341d7bc5382c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""East"",
                    ""type"": ""Button"",
                    ""id"": ""087ee4df-23af-45b1-9174-f1e66aa70bbc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""South"",
                    ""type"": ""Button"",
                    ""id"": ""154516d9-e717-4f90-b274-a613fc01d7d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""West"",
                    ""type"": ""Button"",
                    ""id"": ""4f2624c3-7b02-4d99-a304-12f16cd424a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""North"",
                    ""type"": ""Button"",
                    ""id"": ""26614bde-4ec5-4dae-92e4-42776b728da2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R"",
                    ""type"": ""Button"",
                    ""id"": ""90c68928-6894-4d2f-8a3f-6c1dd7c69e32"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L"",
                    ""type"": ""Button"",
                    ""id"": ""e156eabf-1857-4e14-b530-8b437e967dee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TriggerR"",
                    ""type"": ""Button"",
                    ""id"": ""3c30ef41-6482-4d63-b44d-bbbd265fdf73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TriggerL"",
                    ""type"": ""Button"",
                    ""id"": ""55b2a506-7ae7-4e38-ae4e-59778437558d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightStickUp"",
                    ""type"": ""Button"",
                    ""id"": ""84368629-631f-448f-b54b-07bf3da41d86"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightStickDown"",
                    ""type"": ""Button"",
                    ""id"": ""e4d1a83d-98f7-47b6-8b01-6152555e691c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0a2b7780-5f78-4813-acb1-466f31dc644a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""21c6028b-7cd0-4779-a9da-11ab64485466"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""45785464-7e7d-4178-bd1c-a090b1fbdb9d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7184c33e-931d-458d-bead-d1aab4f482a8"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5391ab5f-3a00-45b6-b636-cb55905d01b1"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9728468e-ea2f-4235-b18a-61e218226037"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""861b7a88-2599-4d31-a8bc-6b90060397bb"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38d892db-c939-4cea-9233-4b0cef29e48c"",
                    ""path"": ""<SwitchProControllerHID>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca9ff2de-6be6-4e46-af78-f48fe40602f8"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""East"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d09299a-8545-4f2b-ad4e-29673f45f824"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""East"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7fd87896-bd61-47e0-b241-03fa3ed18ad2"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd328eee-7cda-4d6c-a4fe-eec55a60bc5e"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""572219bb-0770-4e20-8c70-f7c5b4ff88d9"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e2de4b5-a915-44b7-a059-401fb553a2f3"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a84c47b4-8012-4d8d-84c6-2adbad57002c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""South"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b0e55ee-fd6c-4236-851f-7cc2c58a8af8"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""South"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e895f59-53b8-4c5f-bbe5-10a1248d88b6"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""West"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d4a6b14-d033-4a28-8298-1ba0a5cb0f59"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""North"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1baa02a8-0e16-403d-9dab-414441905fe0"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8594bea7-7457-4c59-9f69-744833af063d"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6bb61251-0d79-4cd9-8291-7ec87d553eac"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d553dc69-877c-4c74-a5ca-3856a3321140"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b153aea2-db05-4d6a-80b2-6a79489e7c78"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStickUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22e78bef-de0e-4529-9c23-0f82326a523a"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStickUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53ae80a6-f3d0-47ac-b8d5-1ee2ca9d8419"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStickDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1ba9111-3917-4271-9857-2ac4d9efbd25"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightStickDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Map"",
            ""id"": ""59b2702a-56c5-44a3-809f-bc3660aeb07e"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""b4505b3a-5edf-4206-8692-32e02b6bee77"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchUnitR"",
                    ""type"": ""Button"",
                    ""id"": ""4c700509-dfc9-41a7-9b1c-c4096a4395cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchUnitL"",
                    ""type"": ""Button"",
                    ""id"": ""67ef2645-4da2-41c3-bb8c-d9b9729b7255"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Decide"",
                    ""type"": ""Button"",
                    ""id"": ""af281379-26b9-4977-a30f-0f695709eb55"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill"",
                    ""type"": ""Button"",
                    ""id"": ""20a37c2e-824d-4ba3-98c1-66ef061c3120"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7a6dc4fd-5946-4ff1-b85f-ea3a8d2313df"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""7dafe6b0-19c4-4a3c-ae1a-f3ec3da4358b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2e067abe-70a5-4b80-9b84-b85d3d2a5a1f"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0af8822c-e195-4621-8494-91fc1c4a1862"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""eaa3801e-e828-4b8c-b1e1-3c74f57a4143"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""84398b35-6257-4b05-9ccc-81bb58910561"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""33667a34-4dd0-4d90-9ec2-62be8efa2f32"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbb0030f-54ef-44a7-80bf-2ec8fc717a24"",
                    ""path"": ""<SwitchProControllerHID>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4469b7dc-4cda-44db-8e9b-f06639fc1ad7"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchUnitR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20323a75-8762-4f83-b4cd-20307bf2a217"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchUnitR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e219feb3-81fd-4c8a-92a6-bd112276853d"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchUnitL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b36e725-a23d-4218-a505-524f865ac2cd"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchUnitL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fdc097c2-2608-4abd-88a0-03623aa034e2"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e8deb81-fff9-436c-8459-d664fd2e74e4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25da9386-a816-42c1-9167-cd67733afb95"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89d933cb-408d-40ac-b0d9-7747b1724ed6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Unit"",
            ""id"": ""7f9d01f2-c171-4f3a-ab29-4a354bac6cd2"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6ada82b4-cdd0-4b71-8f9a-0b52d2442536"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Decide"",
                    ""type"": ""Button"",
                    ""id"": ""f1ef3e95-e4de-4207-89ec-d85e56db14be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""2bd15ece-70cd-4d35-a8ea-38acd35d522d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchTargetR"",
                    ""type"": ""Button"",
                    ""id"": ""ded00db9-aca9-4208-ab85-496ce1e3de11"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchTargetL"",
                    ""type"": ""Button"",
                    ""id"": ""9ffd5e7b-eba2-4bcf-a36d-b5f8da89d786"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill"",
                    ""type"": ""Button"",
                    ""id"": ""1f491bb7-26b0-421f-91a6-9801f1380161"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0ecb242c-d243-414b-b53b-565ddc6fb8cc"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""7ad8c4fc-aea0-4827-a07a-efb2a4644988"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f83c86b7-6660-42f4-9ab4-7f33d7f02443"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0d8123b1-864d-4515-9726-40c2c234afce"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f9ba8c0e-9c25-4436-a7c8-ebad8dddf378"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""354be0de-718b-49db-a689-2023bc5342e2"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""31718a12-89a5-4eee-b921-5935ddcf4b66"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96809cf3-2f0f-4d2f-a530-d38683174bb3"",
                    ""path"": ""<SwitchProControllerHID>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82f2a17c-1dc0-46b7-8493-4a15b9a1bb05"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8db78ff8-a3da-4a75-854f-8e45263a588a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71a264ef-fc76-4f1e-bea1-a12fe50c6fd8"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd51e335-665f-453f-a3ca-b43b1dca967e"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0832fdae-979e-4fa8-9064-86fbcbe2acd0"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchTargetR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c160d597-81c4-43dd-b1f9-08b95a0c3afb"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchTargetR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35b89368-08c0-4b9d-bd98-0fbc914877e3"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchTargetL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9405081d-ed04-4472-be49-15a54dec8ce6"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchTargetL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebc4431a-36c2-4f23-9b7f-cde186dc8e96"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf9421a5-8caa-4a4a-90ec-78ba0de7f85d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Common"",
            ""id"": ""734a268e-5a31-4538-9d36-7efa3cccdfeb"",
            ""actions"": [
                {
                    ""name"": ""ZoomUpCamera"",
                    ""type"": ""Button"",
                    ""id"": ""b2a90cca-9e04-4282-afbd-2fc23db4627f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomDownCamera"",
                    ""type"": ""Button"",
                    ""id"": ""91942a28-b7dc-4ac1-a718-5000384394f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchEnemyAttackRange"",
                    ""type"": ""Button"",
                    ""id"": ""9c17a277-d47b-4168-858a-60a2201d2e37"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bbacfc0f-feb6-4da2-a24e-e20ef5a2d1d2"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomUpCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4bd9f7a7-4c7a-48f2-b865-8a739c00ec3f"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomUpCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de59bf03-590e-42ef-bbdc-0382169eb646"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomDownCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""555f3d01-4d4d-48b0-851c-312f4d8062d0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomDownCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4560999-623d-43a4-b72e-671ed218a374"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchEnemyAttackRange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""733aab73-ce3e-4e9f-a1b6-9351b56c18da"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchEnemyAttackRange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""80e52d35-e8c9-431a-9c9f-3ee47d584176"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""ee3d0dc1-3562-4ecb-bff1-02255d08c8a1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Decide"",
                    ""type"": ""Button"",
                    ""id"": ""5e91a77b-a740-4979-be90-f16f8e801d5b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""97911671-3a84-4dd3-a5ea-d8776d5e7383"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchR"",
                    ""type"": ""Button"",
                    ""id"": ""3f2091d2-785e-41bf-91b0-7996f88b84ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchL"",
                    ""type"": ""Button"",
                    ""id"": ""6160e31e-7517-4e0b-acc5-759545ec3e21"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""185d0ebf-e624-4a30-8cf8-1d7535fb90e6"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""1286a77f-b0c3-465a-a4a2-2ca00d90f553"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e2c34963-b866-43b3-ade5-903a3069de56"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""73dca5ae-c21c-4d2f-9b29-a374155c339d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d7975c30-1c07-480a-b8b6-6d206c1ed126"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4561e55f-e0ca-4ea3-ad72-9eff4ab18e8e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e100baeb-1472-4b68-927c-87b18ed117cc"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a9fdb0c-a86e-4761-a842-e0f3929f6759"",
                    ""path"": ""<SwitchProControllerHID>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2e572b6-932b-40c4-a332-02ea6b5f240b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6462e0ba-1efb-4632-87e3-c3bdab967539"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a70ba220-32b5-4912-9843-b7c28247a46c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c08de3cd-9c2b-4bd4-b944-898e2d5e0fb8"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca21893a-0884-4dd1-8092-b96f174bd370"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0209c349-3869-4a28-a35f-c8b134faa20c"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b7a6916-aff0-4069-a007-429b12a0aec1"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32dcd0c4-c792-4b7e-bdae-82586cea905b"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Battle
            m_Battle = asset.FindActionMap("Battle", throwIfNotFound: true);
            m_Battle_Move = m_Battle.FindAction("Move", throwIfNotFound: true);
            m_Battle_East = m_Battle.FindAction("East", throwIfNotFound: true);
            m_Battle_South = m_Battle.FindAction("South", throwIfNotFound: true);
            m_Battle_West = m_Battle.FindAction("West", throwIfNotFound: true);
            m_Battle_North = m_Battle.FindAction("North", throwIfNotFound: true);
            m_Battle_R = m_Battle.FindAction("R", throwIfNotFound: true);
            m_Battle_L = m_Battle.FindAction("L", throwIfNotFound: true);
            m_Battle_TriggerR = m_Battle.FindAction("TriggerR", throwIfNotFound: true);
            m_Battle_TriggerL = m_Battle.FindAction("TriggerL", throwIfNotFound: true);
            m_Battle_RightStickUp = m_Battle.FindAction("RightStickUp", throwIfNotFound: true);
            m_Battle_RightStickDown = m_Battle.FindAction("RightStickDown", throwIfNotFound: true);
            // Map
            m_Map = asset.FindActionMap("Map", throwIfNotFound: true);
            m_Map_Move = m_Map.FindAction("Move", throwIfNotFound: true);
            m_Map_SwitchUnitR = m_Map.FindAction("SwitchUnitR", throwIfNotFound: true);
            m_Map_SwitchUnitL = m_Map.FindAction("SwitchUnitL", throwIfNotFound: true);
            m_Map_Decide = m_Map.FindAction("Decide", throwIfNotFound: true);
            m_Map_Skill = m_Map.FindAction("Skill", throwIfNotFound: true);
            // Unit
            m_Unit = asset.FindActionMap("Unit", throwIfNotFound: true);
            m_Unit_Move = m_Unit.FindAction("Move", throwIfNotFound: true);
            m_Unit_Decide = m_Unit.FindAction("Decide", throwIfNotFound: true);
            m_Unit_Cancel = m_Unit.FindAction("Cancel", throwIfNotFound: true);
            m_Unit_SwitchTargetR = m_Unit.FindAction("SwitchTargetR", throwIfNotFound: true);
            m_Unit_SwitchTargetL = m_Unit.FindAction("SwitchTargetL", throwIfNotFound: true);
            m_Unit_Skill = m_Unit.FindAction("Skill", throwIfNotFound: true);
            // Common
            m_Common = asset.FindActionMap("Common", throwIfNotFound: true);
            m_Common_ZoomUpCamera = m_Common.FindAction("ZoomUpCamera", throwIfNotFound: true);
            m_Common_ZoomDownCamera = m_Common.FindAction("ZoomDownCamera", throwIfNotFound: true);
            m_Common_SwitchEnemyAttackRange = m_Common.FindAction("SwitchEnemyAttackRange", throwIfNotFound: true);
            // Menu
            m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
            m_Menu_Move = m_Menu.FindAction("Move", throwIfNotFound: true);
            m_Menu_Decide = m_Menu.FindAction("Decide", throwIfNotFound: true);
            m_Menu_Cancel = m_Menu.FindAction("Cancel", throwIfNotFound: true);
            m_Menu_SwitchR = m_Menu.FindAction("SwitchR", throwIfNotFound: true);
            m_Menu_SwitchL = m_Menu.FindAction("SwitchL", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Battle
        private readonly InputActionMap m_Battle;
        private IBattleActions m_BattleActionsCallbackInterface;
        private readonly InputAction m_Battle_Move;
        private readonly InputAction m_Battle_East;
        private readonly InputAction m_Battle_South;
        private readonly InputAction m_Battle_West;
        private readonly InputAction m_Battle_North;
        private readonly InputAction m_Battle_R;
        private readonly InputAction m_Battle_L;
        private readonly InputAction m_Battle_TriggerR;
        private readonly InputAction m_Battle_TriggerL;
        private readonly InputAction m_Battle_RightStickUp;
        private readonly InputAction m_Battle_RightStickDown;
        public struct BattleActions
        {
            private @BattleInputs m_Wrapper;
            public BattleActions(@BattleInputs wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Battle_Move;
            public InputAction @East => m_Wrapper.m_Battle_East;
            public InputAction @South => m_Wrapper.m_Battle_South;
            public InputAction @West => m_Wrapper.m_Battle_West;
            public InputAction @North => m_Wrapper.m_Battle_North;
            public InputAction @R => m_Wrapper.m_Battle_R;
            public InputAction @L => m_Wrapper.m_Battle_L;
            public InputAction @TriggerR => m_Wrapper.m_Battle_TriggerR;
            public InputAction @TriggerL => m_Wrapper.m_Battle_TriggerL;
            public InputAction @RightStickUp => m_Wrapper.m_Battle_RightStickUp;
            public InputAction @RightStickDown => m_Wrapper.m_Battle_RightStickDown;
            public InputActionMap Get() { return m_Wrapper.m_Battle; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(BattleActions set) { return set.Get(); }
            public void SetCallbacks(IBattleActions instance)
            {
                if (m_Wrapper.m_BattleActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnMove;
                    @East.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnEast;
                    @East.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnEast;
                    @East.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnEast;
                    @South.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnSouth;
                    @South.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnSouth;
                    @South.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnSouth;
                    @West.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnWest;
                    @West.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnWest;
                    @West.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnWest;
                    @North.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnNorth;
                    @North.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnNorth;
                    @North.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnNorth;
                    @R.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnR;
                    @R.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnR;
                    @R.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnR;
                    @L.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnL;
                    @L.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnL;
                    @L.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnL;
                    @TriggerR.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnTriggerR;
                    @TriggerR.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnTriggerR;
                    @TriggerR.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnTriggerR;
                    @TriggerL.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnTriggerL;
                    @TriggerL.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnTriggerL;
                    @TriggerL.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnTriggerL;
                    @RightStickUp.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnRightStickUp;
                    @RightStickUp.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnRightStickUp;
                    @RightStickUp.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnRightStickUp;
                    @RightStickDown.started -= m_Wrapper.m_BattleActionsCallbackInterface.OnRightStickDown;
                    @RightStickDown.performed -= m_Wrapper.m_BattleActionsCallbackInterface.OnRightStickDown;
                    @RightStickDown.canceled -= m_Wrapper.m_BattleActionsCallbackInterface.OnRightStickDown;
                }
                m_Wrapper.m_BattleActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @East.started += instance.OnEast;
                    @East.performed += instance.OnEast;
                    @East.canceled += instance.OnEast;
                    @South.started += instance.OnSouth;
                    @South.performed += instance.OnSouth;
                    @South.canceled += instance.OnSouth;
                    @West.started += instance.OnWest;
                    @West.performed += instance.OnWest;
                    @West.canceled += instance.OnWest;
                    @North.started += instance.OnNorth;
                    @North.performed += instance.OnNorth;
                    @North.canceled += instance.OnNorth;
                    @R.started += instance.OnR;
                    @R.performed += instance.OnR;
                    @R.canceled += instance.OnR;
                    @L.started += instance.OnL;
                    @L.performed += instance.OnL;
                    @L.canceled += instance.OnL;
                    @TriggerR.started += instance.OnTriggerR;
                    @TriggerR.performed += instance.OnTriggerR;
                    @TriggerR.canceled += instance.OnTriggerR;
                    @TriggerL.started += instance.OnTriggerL;
                    @TriggerL.performed += instance.OnTriggerL;
                    @TriggerL.canceled += instance.OnTriggerL;
                    @RightStickUp.started += instance.OnRightStickUp;
                    @RightStickUp.performed += instance.OnRightStickUp;
                    @RightStickUp.canceled += instance.OnRightStickUp;
                    @RightStickDown.started += instance.OnRightStickDown;
                    @RightStickDown.performed += instance.OnRightStickDown;
                    @RightStickDown.canceled += instance.OnRightStickDown;
                }
            }
        }
        public BattleActions @Battle => new BattleActions(this);

        // Map
        private readonly InputActionMap m_Map;
        private IMapActions m_MapActionsCallbackInterface;
        private readonly InputAction m_Map_Move;
        private readonly InputAction m_Map_SwitchUnitR;
        private readonly InputAction m_Map_SwitchUnitL;
        private readonly InputAction m_Map_Decide;
        private readonly InputAction m_Map_Skill;
        public struct MapActions
        {
            private @BattleInputs m_Wrapper;
            public MapActions(@BattleInputs wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Map_Move;
            public InputAction @SwitchUnitR => m_Wrapper.m_Map_SwitchUnitR;
            public InputAction @SwitchUnitL => m_Wrapper.m_Map_SwitchUnitL;
            public InputAction @Decide => m_Wrapper.m_Map_Decide;
            public InputAction @Skill => m_Wrapper.m_Map_Skill;
            public InputActionMap Get() { return m_Wrapper.m_Map; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MapActions set) { return set.Get(); }
            public void SetCallbacks(IMapActions instance)
            {
                if (m_Wrapper.m_MapActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_MapActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_MapActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_MapActionsCallbackInterface.OnMove;
                    @SwitchUnitR.started -= m_Wrapper.m_MapActionsCallbackInterface.OnSwitchUnitR;
                    @SwitchUnitR.performed -= m_Wrapper.m_MapActionsCallbackInterface.OnSwitchUnitR;
                    @SwitchUnitR.canceled -= m_Wrapper.m_MapActionsCallbackInterface.OnSwitchUnitR;
                    @SwitchUnitL.started -= m_Wrapper.m_MapActionsCallbackInterface.OnSwitchUnitL;
                    @SwitchUnitL.performed -= m_Wrapper.m_MapActionsCallbackInterface.OnSwitchUnitL;
                    @SwitchUnitL.canceled -= m_Wrapper.m_MapActionsCallbackInterface.OnSwitchUnitL;
                    @Decide.started -= m_Wrapper.m_MapActionsCallbackInterface.OnDecide;
                    @Decide.performed -= m_Wrapper.m_MapActionsCallbackInterface.OnDecide;
                    @Decide.canceled -= m_Wrapper.m_MapActionsCallbackInterface.OnDecide;
                    @Skill.started -= m_Wrapper.m_MapActionsCallbackInterface.OnSkill;
                    @Skill.performed -= m_Wrapper.m_MapActionsCallbackInterface.OnSkill;
                    @Skill.canceled -= m_Wrapper.m_MapActionsCallbackInterface.OnSkill;
                }
                m_Wrapper.m_MapActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @SwitchUnitR.started += instance.OnSwitchUnitR;
                    @SwitchUnitR.performed += instance.OnSwitchUnitR;
                    @SwitchUnitR.canceled += instance.OnSwitchUnitR;
                    @SwitchUnitL.started += instance.OnSwitchUnitL;
                    @SwitchUnitL.performed += instance.OnSwitchUnitL;
                    @SwitchUnitL.canceled += instance.OnSwitchUnitL;
                    @Decide.started += instance.OnDecide;
                    @Decide.performed += instance.OnDecide;
                    @Decide.canceled += instance.OnDecide;
                    @Skill.started += instance.OnSkill;
                    @Skill.performed += instance.OnSkill;
                    @Skill.canceled += instance.OnSkill;
                }
            }
        }
        public MapActions @Map => new MapActions(this);

        // Unit
        private readonly InputActionMap m_Unit;
        private IUnitActions m_UnitActionsCallbackInterface;
        private readonly InputAction m_Unit_Move;
        private readonly InputAction m_Unit_Decide;
        private readonly InputAction m_Unit_Cancel;
        private readonly InputAction m_Unit_SwitchTargetR;
        private readonly InputAction m_Unit_SwitchTargetL;
        private readonly InputAction m_Unit_Skill;
        public struct UnitActions
        {
            private @BattleInputs m_Wrapper;
            public UnitActions(@BattleInputs wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Unit_Move;
            public InputAction @Decide => m_Wrapper.m_Unit_Decide;
            public InputAction @Cancel => m_Wrapper.m_Unit_Cancel;
            public InputAction @SwitchTargetR => m_Wrapper.m_Unit_SwitchTargetR;
            public InputAction @SwitchTargetL => m_Wrapper.m_Unit_SwitchTargetL;
            public InputAction @Skill => m_Wrapper.m_Unit_Skill;
            public InputActionMap Get() { return m_Wrapper.m_Unit; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(UnitActions set) { return set.Get(); }
            public void SetCallbacks(IUnitActions instance)
            {
                if (m_Wrapper.m_UnitActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_UnitActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_UnitActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_UnitActionsCallbackInterface.OnMove;
                    @Decide.started -= m_Wrapper.m_UnitActionsCallbackInterface.OnDecide;
                    @Decide.performed -= m_Wrapper.m_UnitActionsCallbackInterface.OnDecide;
                    @Decide.canceled -= m_Wrapper.m_UnitActionsCallbackInterface.OnDecide;
                    @Cancel.started -= m_Wrapper.m_UnitActionsCallbackInterface.OnCancel;
                    @Cancel.performed -= m_Wrapper.m_UnitActionsCallbackInterface.OnCancel;
                    @Cancel.canceled -= m_Wrapper.m_UnitActionsCallbackInterface.OnCancel;
                    @SwitchTargetR.started -= m_Wrapper.m_UnitActionsCallbackInterface.OnSwitchTargetR;
                    @SwitchTargetR.performed -= m_Wrapper.m_UnitActionsCallbackInterface.OnSwitchTargetR;
                    @SwitchTargetR.canceled -= m_Wrapper.m_UnitActionsCallbackInterface.OnSwitchTargetR;
                    @SwitchTargetL.started -= m_Wrapper.m_UnitActionsCallbackInterface.OnSwitchTargetL;
                    @SwitchTargetL.performed -= m_Wrapper.m_UnitActionsCallbackInterface.OnSwitchTargetL;
                    @SwitchTargetL.canceled -= m_Wrapper.m_UnitActionsCallbackInterface.OnSwitchTargetL;
                    @Skill.started -= m_Wrapper.m_UnitActionsCallbackInterface.OnSkill;
                    @Skill.performed -= m_Wrapper.m_UnitActionsCallbackInterface.OnSkill;
                    @Skill.canceled -= m_Wrapper.m_UnitActionsCallbackInterface.OnSkill;
                }
                m_Wrapper.m_UnitActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @Decide.started += instance.OnDecide;
                    @Decide.performed += instance.OnDecide;
                    @Decide.canceled += instance.OnDecide;
                    @Cancel.started += instance.OnCancel;
                    @Cancel.performed += instance.OnCancel;
                    @Cancel.canceled += instance.OnCancel;
                    @SwitchTargetR.started += instance.OnSwitchTargetR;
                    @SwitchTargetR.performed += instance.OnSwitchTargetR;
                    @SwitchTargetR.canceled += instance.OnSwitchTargetR;
                    @SwitchTargetL.started += instance.OnSwitchTargetL;
                    @SwitchTargetL.performed += instance.OnSwitchTargetL;
                    @SwitchTargetL.canceled += instance.OnSwitchTargetL;
                    @Skill.started += instance.OnSkill;
                    @Skill.performed += instance.OnSkill;
                    @Skill.canceled += instance.OnSkill;
                }
            }
        }
        public UnitActions @Unit => new UnitActions(this);

        // Common
        private readonly InputActionMap m_Common;
        private ICommonActions m_CommonActionsCallbackInterface;
        private readonly InputAction m_Common_ZoomUpCamera;
        private readonly InputAction m_Common_ZoomDownCamera;
        private readonly InputAction m_Common_SwitchEnemyAttackRange;
        public struct CommonActions
        {
            private @BattleInputs m_Wrapper;
            public CommonActions(@BattleInputs wrapper) { m_Wrapper = wrapper; }
            public InputAction @ZoomUpCamera => m_Wrapper.m_Common_ZoomUpCamera;
            public InputAction @ZoomDownCamera => m_Wrapper.m_Common_ZoomDownCamera;
            public InputAction @SwitchEnemyAttackRange => m_Wrapper.m_Common_SwitchEnemyAttackRange;
            public InputActionMap Get() { return m_Wrapper.m_Common; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CommonActions set) { return set.Get(); }
            public void SetCallbacks(ICommonActions instance)
            {
                if (m_Wrapper.m_CommonActionsCallbackInterface != null)
                {
                    @ZoomUpCamera.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnZoomUpCamera;
                    @ZoomUpCamera.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnZoomUpCamera;
                    @ZoomUpCamera.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnZoomUpCamera;
                    @ZoomDownCamera.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnZoomDownCamera;
                    @ZoomDownCamera.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnZoomDownCamera;
                    @ZoomDownCamera.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnZoomDownCamera;
                    @SwitchEnemyAttackRange.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnSwitchEnemyAttackRange;
                    @SwitchEnemyAttackRange.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnSwitchEnemyAttackRange;
                    @SwitchEnemyAttackRange.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnSwitchEnemyAttackRange;
                }
                m_Wrapper.m_CommonActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @ZoomUpCamera.started += instance.OnZoomUpCamera;
                    @ZoomUpCamera.performed += instance.OnZoomUpCamera;
                    @ZoomUpCamera.canceled += instance.OnZoomUpCamera;
                    @ZoomDownCamera.started += instance.OnZoomDownCamera;
                    @ZoomDownCamera.performed += instance.OnZoomDownCamera;
                    @ZoomDownCamera.canceled += instance.OnZoomDownCamera;
                    @SwitchEnemyAttackRange.started += instance.OnSwitchEnemyAttackRange;
                    @SwitchEnemyAttackRange.performed += instance.OnSwitchEnemyAttackRange;
                    @SwitchEnemyAttackRange.canceled += instance.OnSwitchEnemyAttackRange;
                }
            }
        }
        public CommonActions @Common => new CommonActions(this);

        // Menu
        private readonly InputActionMap m_Menu;
        private IMenuActions m_MenuActionsCallbackInterface;
        private readonly InputAction m_Menu_Move;
        private readonly InputAction m_Menu_Decide;
        private readonly InputAction m_Menu_Cancel;
        private readonly InputAction m_Menu_SwitchR;
        private readonly InputAction m_Menu_SwitchL;
        public struct MenuActions
        {
            private @BattleInputs m_Wrapper;
            public MenuActions(@BattleInputs wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Menu_Move;
            public InputAction @Decide => m_Wrapper.m_Menu_Decide;
            public InputAction @Cancel => m_Wrapper.m_Menu_Cancel;
            public InputAction @SwitchR => m_Wrapper.m_Menu_SwitchR;
            public InputAction @SwitchL => m_Wrapper.m_Menu_SwitchL;
            public InputActionMap Get() { return m_Wrapper.m_Menu; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
            public void SetCallbacks(IMenuActions instance)
            {
                if (m_Wrapper.m_MenuActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnMove;
                    @Decide.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnDecide;
                    @Decide.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnDecide;
                    @Decide.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnDecide;
                    @Cancel.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnCancel;
                    @Cancel.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnCancel;
                    @Cancel.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnCancel;
                    @SwitchR.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnSwitchR;
                    @SwitchR.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnSwitchR;
                    @SwitchR.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnSwitchR;
                    @SwitchL.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnSwitchL;
                    @SwitchL.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnSwitchL;
                    @SwitchL.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnSwitchL;
                }
                m_Wrapper.m_MenuActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                    @Decide.started += instance.OnDecide;
                    @Decide.performed += instance.OnDecide;
                    @Decide.canceled += instance.OnDecide;
                    @Cancel.started += instance.OnCancel;
                    @Cancel.performed += instance.OnCancel;
                    @Cancel.canceled += instance.OnCancel;
                    @SwitchR.started += instance.OnSwitchR;
                    @SwitchR.performed += instance.OnSwitchR;
                    @SwitchR.canceled += instance.OnSwitchR;
                    @SwitchL.started += instance.OnSwitchL;
                    @SwitchL.performed += instance.OnSwitchL;
                    @SwitchL.canceled += instance.OnSwitchL;
                }
            }
        }
        public MenuActions @Menu => new MenuActions(this);
        public interface IBattleActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnEast(InputAction.CallbackContext context);
            void OnSouth(InputAction.CallbackContext context);
            void OnWest(InputAction.CallbackContext context);
            void OnNorth(InputAction.CallbackContext context);
            void OnR(InputAction.CallbackContext context);
            void OnL(InputAction.CallbackContext context);
            void OnTriggerR(InputAction.CallbackContext context);
            void OnTriggerL(InputAction.CallbackContext context);
            void OnRightStickUp(InputAction.CallbackContext context);
            void OnRightStickDown(InputAction.CallbackContext context);
        }
        public interface IMapActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnSwitchUnitR(InputAction.CallbackContext context);
            void OnSwitchUnitL(InputAction.CallbackContext context);
            void OnDecide(InputAction.CallbackContext context);
            void OnSkill(InputAction.CallbackContext context);
        }
        public interface IUnitActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnDecide(InputAction.CallbackContext context);
            void OnCancel(InputAction.CallbackContext context);
            void OnSwitchTargetR(InputAction.CallbackContext context);
            void OnSwitchTargetL(InputAction.CallbackContext context);
            void OnSkill(InputAction.CallbackContext context);
        }
        public interface ICommonActions
        {
            void OnZoomUpCamera(InputAction.CallbackContext context);
            void OnZoomDownCamera(InputAction.CallbackContext context);
            void OnSwitchEnemyAttackRange(InputAction.CallbackContext context);
        }
        public interface IMenuActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnDecide(InputAction.CallbackContext context);
            void OnCancel(InputAction.CallbackContext context);
            void OnSwitchR(InputAction.CallbackContext context);
            void OnSwitchL(InputAction.CallbackContext context);
        }
    }
}
