// <auto-generated />
#pragma warning disable CS0105
using Master.Constants;
using Master.Tables.Enemy;
using Master.Tables.Hero;
using MasterMemory.Validation;
using MasterMemory;
using MessagePack;
using System.Collections.Generic;
using System;
using App.MD.Tables;

namespace App.MD
{
   public sealed class DatabaseBuilder : DatabaseBuilderBase
   {
        public DatabaseBuilder() : this(null) { }
        public DatabaseBuilder(MessagePack.IFormatterResolver resolver) : base(resolver) { }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<EnemyBaseEntity> dataSource)
        {
            AppendCore(dataSource, x => x.EnemyId, System.Collections.Generic.Comparer<uint>.Default);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<EnemyLevelStatusEntity> dataSource)
        {
            AppendCore(dataSource, x => (x.EnemyId, x.Level), System.Collections.Generic.Comparer<(uint EnemyId, int Level)>.Default);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<EnemySkillEffectEntity> dataSource)
        {
            AppendCore(dataSource, x => x.EffectId, System.Collections.Generic.Comparer<uint>.Default);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<EnemySkillEntity> dataSource)
        {
            AppendCore(dataSource, x => x.SkillId, System.Collections.Generic.Comparer<uint>.Default);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<EnemySkillSetEntity> dataSource)
        {
            AppendCore(dataSource, x => (x.SkillSetId, x.SkillId), System.Collections.Generic.Comparer<(uint SkillSetId, uint SkillId)>.Default);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<HeroFormationEntity> dataSource)
        {
            AppendCore(dataSource, x => x.FormationId, System.Collections.Generic.Comparer<uint>.Default);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<HeroFormationFrameEntity> dataSource)
        {
            AppendCore(dataSource, x => (x.FormationId, x.FrameIndex), System.Collections.Generic.Comparer<(uint FormationId, int FrameIndex)>.Default);
            return this;
        }

    }
}